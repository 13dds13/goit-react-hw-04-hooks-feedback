{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","components/notification/Notification.js","components/statistics/statisticsData/StatisticsData.js","components/statistics/Statistics.js","components/App.js","index.js","components/feedbackOptions/FeedbackOptions.module.css","components/section/Section.module.css","components/statistics/statisticsData/StatisticalData.module.css"],"names":["FeedbackOptions","options","onBtnClick","className","styles","container","map","item","btn","type","name","onClick","toUpperCase","slice","Section","children","title","Notification","msg","StatisticsData","countTotalFeedback","countPositiveFeedbackPercentage","good","neutral","bad","total","positive","Statistics","INIT_STATE","App","useState","state","setState","Object","keys","evt","currentBtn","target","prev","Math","round","ReactDOM","render","document","getElementById","module","exports"],"mappings":"oQA2BeA,EAvBS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAClC,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACGJ,EAAQK,KAAI,SAAAC,GAAI,OACf,wBACEJ,UAAWC,IAAOI,IAElBC,KAAK,SACLC,KAAMH,EACNI,QAAST,EALX,SAOGK,EAAK,GAAGK,cAAgBL,EAAKM,MAAM,IAL/BN,S,gBCQAO,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,0BAASb,UAAWC,IAAOC,UAA3B,UACGW,GAAS,oBAAIb,UAAWC,IAAOY,MAAtB,SAA8BA,IACvCD,MCCQE,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OAAa,4BAAIA,K,gBC4BvBC,EA3BQ,SAAC,GAMjB,IALLC,EAKI,EALJA,mBACAC,EAII,EAJJA,gCACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,IAEMC,EAAQL,IACRM,EAAWL,IACjB,OACE,sBAAKlB,UAAWC,IAAOC,UAAvB,UACE,uCAAUiB,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACX,mDAAsBC,EAAtB,WCYSC,EA1BI,SAAC,GAOb,IANLP,EAMI,EANJA,mBACAC,EAKI,EALJA,gCACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,IACAN,EACI,EADJA,IAGA,OADsBE,IAEpB,cAAC,EAAD,CACEE,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLJ,mBAAoBA,EACpBC,gCAAiCA,IAGnC,cAAC,EAAD,CAAcH,IAAKA,KClBjBU,EAAa,CACjBN,KAAM,EACNC,QAAS,EACTC,IAAK,GAqCQK,EAlCH,WACV,MAA0BC,mBAASF,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEQV,EAAuBS,EAAvBT,KAAMC,EAAiBQ,EAAjBR,QAASC,EAAQO,EAARP,IAOjBJ,EAAqB,kBAAME,EAAOC,EAAUC,GAKlD,OACE,qCACE,cAAC,EAAD,CAASR,MAAO,6BAAhB,SACE,cAAC,EAAD,CAAiBf,QAASgC,OAAOC,KAAKH,GAAQ7B,WAbjC,SAAAiC,GACjB,IAAMC,EAAaD,EAAIE,OAAO3B,KAC9BsB,GAAS,SAAAM,GAAI,kCAAUA,GAAV,kBAAiBF,EAAaL,EAAMK,GAAc,YAa7D,cAAC,EAAD,CAASpB,MAAO,aAAhB,SACE,cAAC,EAAD,CACEM,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLJ,mBAAoBA,EACpBC,gCAdgC,kBACtCkB,KAAKC,MAAc,IAAPlB,EAAcF,MAcpBF,IAAK,4BCjCfuB,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,mCAAmC,IAAM,+B,kBCAvED,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,kBCAjED,EAAOC,QAAU,CAAC,UAAY,sC","file":"static/js/main.c120bce3.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onBtnClick }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      {options.map(item => (\r\n        <button\r\n          className={styles.btn}\r\n          key={item}\r\n          type=\"button\"\r\n          name={item}\r\n          onClick={onBtnClick}\r\n        >\r\n          {item[0].toUpperCase() + item.slice(1)}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onBtnClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ children, title }) => {\r\n  return (\r\n    <section className={styles.container}>\r\n      {title && <h2 className={styles.title}>{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ msg }) => <p>{msg}</p>;\r\n\r\nNotification.propTypes = {\r\n  msg: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './StatisticalData.module.css';\r\n\r\nconst StatisticsData = ({\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n  good,\r\n  neutral,\r\n  bad,\r\n}) => {\r\n  const total = countTotalFeedback();\r\n  const positive = countPositiveFeedbackPercentage();\r\n  return (\r\n    <div className={styles.container}>\r\n      <p>Good: {good}</p>\r\n      <p>Neutral: {neutral}</p>\r\n      <p>Bad: {bad}</p>\r\n      <p>Total: {total}</p>\r\n      <p>PositiveFeedback: {positive}%</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nStatisticsData.propTypes = {\r\n  countPositiveFeedbackPercentage: PropTypes.func.isRequired,\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default StatisticsData;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Notification from '../notification/Notification';\r\nimport StatisticsData from './statisticsData/StatisticsData';\r\n\r\nconst Statistics = ({\r\n  countTotalFeedback,\r\n  countPositiveFeedbackPercentage,\r\n  good,\r\n  neutral,\r\n  bad,\r\n  msg,\r\n}) => {\r\n  const isAnyFeedback = countTotalFeedback();\r\n  return isAnyFeedback ? (\r\n    <StatisticsData\r\n      good={good}\r\n      neutral={neutral}\r\n      bad={bad}\r\n      countTotalFeedback={countTotalFeedback}\r\n      countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\r\n    />\r\n  ) : (\r\n    <Notification msg={msg} />\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  countTotalFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { useState } from 'react';\r\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\r\nimport Section from './section/Section';\r\nimport Statistics from './statistics/Statistics';\r\n\r\nconst INIT_STATE = {\r\n  good: 0,\r\n  neutral: 0,\r\n  bad: 0,\r\n};\r\n\r\nconst App = () => {\r\n  const [state, setState] = useState(INIT_STATE);\r\n\r\n  const { good, neutral, bad } = state;\r\n\r\n  const onBtnClick = evt => {\r\n    const currentBtn = evt.target.name;\r\n    setState(prev => ({ ...prev, [currentBtn]: state[currentBtn] + 1 }));\r\n  };\r\n\r\n  const countTotalFeedback = () => good + neutral + bad;\r\n\r\n  const countPositiveFeedbackPercentage = () =>\r\n    Math.round((good * 100) / countTotalFeedback());\r\n\r\n  return (\r\n    <>\r\n      <Section title={'Please leave Your feedback'}>\r\n        <FeedbackOptions options={Object.keys(state)} onBtnClick={onBtnClick} />\r\n      </Section>\r\n      <Section title={'Statistics'}>\r\n        <Statistics\r\n          good={good}\r\n          neutral={neutral}\r\n          bad={bad}\r\n          countTotalFeedback={countTotalFeedback}\r\n          countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\r\n          msg={'No feedback given'}\r\n        />\r\n      </Section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__1-o7c\",\"btn\":\"FeedbackOptions_btn__1jj1V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3GhcL\",\"title\":\"Section_title__3LXmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StatisticalData_container__3tY70\"};"],"sourceRoot":""}