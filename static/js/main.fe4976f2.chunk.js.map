{"version":3,"sources":["components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","components/notification/Notification.js","components/statistics/statisticsData/StatisticsData.js","components/statistics/Statistics.js","components/App.js","index.js","components/feedbackOptions/FeedbackOptions.module.css","components/section/Section.module.css","components/statistics/statisticsData/StatisticalData.module.css"],"names":["FeedbackOptions","options","onBtnClick","className","styles","container","map","item","btn","type","name","onClick","toUpperCase","slice","Section","children","title","Notification","msg","StatisticsData","countTotalFeedback","countPositiveFeedbackPercentage","good","neutral","bad","Statistics","App","state","evt","currentBtn","target","setState","percentage","Math","round","this","Object","keys","Component","ReactDOM","render","document","getElementById","module","exports"],"mappings":"wQA2BeA,EAvBS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAClC,OACE,qBAAKC,UAAWC,IAAOC,UAAvB,SACGJ,EAAQK,KAAI,SAAAC,GAAI,OACf,wBACEJ,UAAWC,IAAOI,IAElBC,KAAK,SACLC,KAAMH,EACNI,QAAST,EALX,SAOGK,EAAK,GAAGK,cAAgBL,EAAKM,MAAM,IAL/BN,S,gBCQAO,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC3B,OACE,0BAASb,UAAWC,IAAOC,UAA3B,UACGW,GAAS,oBAAIb,UAAWC,IAAOY,MAAtB,SAA8BA,IACvCD,MCCQE,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAH,OAAa,4BAAIA,K,gBC2BvBC,EA1BQ,SAAC,GAMjB,IALLC,EAKI,EALJA,mBACAC,EAII,EAJJA,gCACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,QACAC,EACI,EADJA,IAEA,OACE,sBAAKrB,UAAWC,IAAOC,UAAvB,UACE,uCAAUiB,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWJ,OACX,mDAAsBC,IAAtB,WCQSI,EArBI,SAAC,GAOb,IANLL,EAMI,EANJA,mBACAC,EAKI,EALJA,gCACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,IACAN,EACI,EADJA,IAEA,OAAOE,IACL,cAAC,EAAD,CACEE,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLJ,mBAAoBA,EACpBC,gCAAiCA,IAGnC,cAAC,EAAD,CAAcH,IAAKA,KChBjBQ,E,4MACJC,MAAQ,CACNL,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPtB,WAAa,SAAA0B,GACX,IAAMC,EAAaD,EAAIE,OAAOpB,KAC9B,EAAKqB,SAAL,eAAiBF,EAAa,EAAKF,MAAME,GAAc,K,EAGzDT,mBAAqB,WACnB,MAA+B,EAAKO,MACpC,OADA,EAAQL,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzBH,gCAAkC,WAChC,IAAMW,EAAaC,KAAKC,MACH,IAAlB,EAAKP,MAAML,KAAc,EAAKF,sBAEjC,OAAOY,GAA0B,G,4CAGnC,WACE,MAA+BG,KAAKR,MAA5BL,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,qCACE,cAAC,EAAD,CAASR,MAAO,6BAAhB,SACE,cAAC,EAAD,CACEf,QAASmC,OAAOC,KAAKF,KAAKR,OAC1BzB,WAAYiC,KAAKjC,eAGrB,cAAC,EAAD,CAASc,MAAO,aAAhB,SACE,cAAC,EAAD,CACEM,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLJ,mBAAoBe,KAAKf,mBACzBC,gCACEc,KAAKd,gCAEPH,IAAK,+B,GA3CCoB,aAmDHZ,ICnDfa,IAASC,OAEP,cAAC,EAAD,IAEAC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,UAAY,mCAAmC,IAAM,+B,kBCAvED,EAAOC,QAAU,CAAC,UAAY,2BAA2B,MAAQ,yB,kBCAjED,EAAOC,QAAU,CAAC,UAAY,sC","file":"static/js/main.fe4976f2.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ options, onBtnClick }) => {\n  return (\n    <div className={styles.container}>\n      {options.map(item => (\n        <button\n          className={styles.btn}\n          key={item}\n          type=\"button\"\n          name={item}\n          onClick={onBtnClick}\n        >\n          {item[0].toUpperCase() + item.slice(1)}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onBtnClick: PropTypes.func,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ children, title }) => {\n  return (\n    <section className={styles.container}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  children: PropTypes.node,\n  title: PropTypes.string,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ msg }) => <p>{msg}</p>;\n\nNotification.propTypes = {\n  msg: PropTypes.string,\n};\n\nexport default Notification;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './StatisticalData.module.css';\n\nconst StatisticsData = ({\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n  good,\n  neutral,\n  bad,\n}) => {\n  return (\n    <div className={styles.container}>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {countTotalFeedback()}</p>\n      <p>PositiveFeedback: {countPositiveFeedbackPercentage()}%</p>\n    </div>\n  );\n};\n\nStatisticsData.propTypes = {\n  countTotalFeedback: PropTypes.func,\n  countPositiveFeedbackPercentage: PropTypes.func,\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n};\n\nexport default StatisticsData;\n","import React from 'react';\nimport Notification from '../notification/Notification';\nimport StatisticsData from './statisticsData/StatisticsData';\n\nconst Statistics = ({\n  countTotalFeedback,\n  countPositiveFeedbackPercentage,\n  good,\n  neutral,\n  bad,\n  msg,\n}) => {\n  return countTotalFeedback() ? (\n    <StatisticsData\n      good={good}\n      neutral={neutral}\n      bad={bad}\n      countTotalFeedback={countTotalFeedback}\n      countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\n    />\n  ) : (\n    <Notification msg={msg} />\n  );\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport FeedbackOptions from './feedbackOptions/FeedbackOptions';\nimport Section from './section/Section';\nimport Statistics from './statistics/Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onBtnClick = evt => {\n    const currentBtn = evt.target.name;\n    this.setState({ [currentBtn]: this.state[currentBtn] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const percentage = Math.round(\n      (this.state.good * 100) / this.countTotalFeedback(),\n    );\n    return percentage ? percentage : 0;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title={'Please leave Your feedback'}>\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onBtnClick={this.onBtnClick}\n          />\n        </Section>\n        <Section title={'Statistics'}>\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            countTotalFeedback={this.countTotalFeedback}\n            countPositiveFeedbackPercentage={\n              this.countPositiveFeedbackPercentage\n            }\n            msg={'No feedback given'}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"FeedbackOptions_container__1-o7c\",\"btn\":\"FeedbackOptions_btn__1jj1V\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3GhcL\",\"title\":\"Section_title__3LXmr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"StatisticalData_container__3tY70\"};"],"sourceRoot":""}